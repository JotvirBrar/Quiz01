def matVec(M,V):
  """
  This function utilizes while loops and for loops to take a vector and a matrix as its arguements and divides it into three python lists and deals with them before returning the final answer.
  """ 
  m = len(M)
  v = len(V)
  #these determine the length of the matrix and vector
  j = 0
  #denotes the rows
  l = []
  #assigning an empty list to a variable
  
  while j < m:
    #accessing the first small list 
    i = 0
    """
    denotes rows, put it here in order for the while loop to be reset back to i = 0, instead of putting at beginning, putting it here allows us to not assign the same thing twice
    """
    while i < v:
      #accessing elements in the first small list
       h = M[j][i]*V[i]
       #h is multiplication equation
       l += [h]
       #add the value of h into a list, this case l
       i += 1
       #increase the value of i by one for each iteration
    j += 1
    """
    increase the value of j after finishing the i's while loop, must be outside i while loop, if used inside, j will increase by n*m, when we only want to increase by m value only.
    """
  w = 0
  hh = 0
  #developing an index interval
  answer = []
  """
  Now we must add each n-number of elements into a new list so that it contains the final values.
  """
  while w < len(l):
    #accessing the index of all elements in the l-list
    w += v
    #w needs to be n, added n value to w to skip n-nimber for each iteration
    s = 0
    for k in l [hh:w]:
      #accesss all the elements inside the created interval each at a time
      s += k
      #same thing as before
    hh += v
    """
    add n value to hh in order to skip n number for each iteration,keep the same interval size by adding the same value to start and end interval
    """
    answer += [s]
    #adding the summed values in a list and add both lists into the empty list
  return answer

M = [[1,2], [3,4]]
V = [1,2]
print(matVec(M,V))

#M = [1,2]
#V = [[1,2],[3,4]]
#print(matVec(M,V))

#M = [1,2,3,4]
#V = 2
